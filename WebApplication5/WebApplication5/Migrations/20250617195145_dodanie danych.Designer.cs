// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebApplication5.Data;

#nullable disable

namespace WebApplication5.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250617195145_dodanie danych")]
    partial class dodaniedanych
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("WebApplication5.Models.Prelegent", b =>
                {
                    b.Property<int>("IdPrelegent")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdPrelegent"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Imie")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Nazwisko")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("IdPrelegent");

                    b.ToTable("Prelegent");

                    b.HasData(
                        new
                        {
                            IdPrelegent = 1,
                            Email = "tomasz.zielinski@example.com",
                            Imie = "Tomasz",
                            Nazwisko = "Zieliński"
                        },
                        new
                        {
                            IdPrelegent = 2,
                            Email = "k.wisniewska@example.com",
                            Imie = "Katarzyna",
                            Nazwisko = "Wiśniewska"
                        });
                });

            modelBuilder.Entity("WebApplication5.Models.Uczestnik", b =>
                {
                    b.Property<int>("IdUczestnik")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdUczestnik"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Imie")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Nazwisko")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("IdUczestnik");

                    b.ToTable("Uczestnik");

                    b.HasData(
                        new
                        {
                            IdUczestnik = 1,
                            Email = "jan.kowalski@gmail.com",
                            Imie = "Jan",
                            Nazwisko = "Kowalski"
                        },
                        new
                        {
                            IdUczestnik = 2,
                            Email = "anna.nowak@gmail.com",
                            Imie = "Anna",
                            Nazwisko = "Nowak"
                        },
                        new
                        {
                            IdUczestnik = 3,
                            Email = "coco.loco@gmail.com",
                            Imie = "Coco",
                            Nazwisko = "Loco"
                        },
                        new
                        {
                            IdUczestnik = 4,
                            Email = "zygzak@gmail.com",
                            Imie = "Zygzak",
                            Nazwisko = "McQueen"
                        },
                        new
                        {
                            IdUczestnik = 5,
                            Email = "tomasz@gmail.com",
                            Imie = "Tomasz",
                            Nazwisko = "Hajto"
                        },
                        new
                        {
                            IdUczestnik = 6,
                            Email = "zbigniew@gmail.com",
                            Imie = "Zbigniew",
                            Nazwisko = "Golonka"
                        },
                        new
                        {
                            IdUczestnik = 7,
                            Email = "kolanko@gmail.com",
                            Imie = "Max",
                            Nazwisko = "Kolanko"
                        });
                });

            modelBuilder.Entity("WebApplication5.Models.UczestnikWydarzenie", b =>
                {
                    b.Property<int>("UczestnikId")
                        .HasColumnType("int");

                    b.Property<int>("WydarzenieId")
                        .HasColumnType("int");

                    b.HasKey("UczestnikId", "WydarzenieId");

                    b.HasIndex("WydarzenieId");

                    b.ToTable("UczestnikWydarzenie");

                    b.HasData(
                        new
                        {
                            UczestnikId = 1,
                            WydarzenieId = 1
                        },
                        new
                        {
                            UczestnikId = 1,
                            WydarzenieId = 2
                        },
                        new
                        {
                            UczestnikId = 2,
                            WydarzenieId = 1
                        },
                        new
                        {
                            UczestnikId = 3,
                            WydarzenieId = 2
                        },
                        new
                        {
                            UczestnikId = 4,
                            WydarzenieId = 2
                        },
                        new
                        {
                            UczestnikId = 5,
                            WydarzenieId = 2
                        },
                        new
                        {
                            UczestnikId = 6,
                            WydarzenieId = 2
                        });
                });

            modelBuilder.Entity("WebApplication5.Models.Wydarzenie", b =>
                {
                    b.Property<int>("IdWydarzenie")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdWydarzenie"));

                    b.Property<DateTime>("Data")
                        .HasColumnType("datetime2");

                    b.Property<int>("MaxUczestnik")
                        .HasColumnType("int");

                    b.Property<string>("Opis")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Tytul")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("IdWydarzenie");

                    b.ToTable("Wydarzenia");

                    b.HasData(
                        new
                        {
                            IdWydarzenie = 1,
                            Data = new DateTime(2025, 10, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MaxUczestnik = 20,
                            Opis = "Wydarzenie poświęcone nowym technologiom.",
                            Tytul = "Konferencja IT"
                        },
                        new
                        {
                            IdWydarzenie = 2,
                            Data = new DateTime(2025, 11, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MaxUczestnik = 5,
                            Opis = "Praktyczne warsztaty z uczenia maszynowego.",
                            Tytul = "Warsztaty AI"
                        });
                });

            modelBuilder.Entity("WebApplication5.Models.WydarzeniePrelegent", b =>
                {
                    b.Property<int>("PrelegentId")
                        .HasColumnType("int");

                    b.Property<int>("WydarzenieId")
                        .HasColumnType("int");

                    b.HasKey("PrelegentId", "WydarzenieId");

                    b.HasIndex("WydarzenieId");

                    b.ToTable("WydarzeniePrelegent");

                    b.HasData(
                        new
                        {
                            PrelegentId = 1,
                            WydarzenieId = 1
                        },
                        new
                        {
                            PrelegentId = 2,
                            WydarzenieId = 2
                        });
                });

            modelBuilder.Entity("WebApplication5.Models.UczestnikWydarzenie", b =>
                {
                    b.HasOne("WebApplication5.Models.Uczestnik", "Uczestnik")
                        .WithMany("Wydarzenia")
                        .HasForeignKey("UczestnikId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApplication5.Models.Wydarzenie", "Wydarzenie")
                        .WithMany("UczestnikWydarzenie")
                        .HasForeignKey("WydarzenieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Uczestnik");

                    b.Navigation("Wydarzenie");
                });

            modelBuilder.Entity("WebApplication5.Models.WydarzeniePrelegent", b =>
                {
                    b.HasOne("WebApplication5.Models.Prelegent", "Prelegent")
                        .WithMany("Wydarzenia")
                        .HasForeignKey("PrelegentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApplication5.Models.Wydarzenie", "Wydarzenie")
                        .WithMany("WydarzeniePrelegent")
                        .HasForeignKey("WydarzenieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Prelegent");

                    b.Navigation("Wydarzenie");
                });

            modelBuilder.Entity("WebApplication5.Models.Prelegent", b =>
                {
                    b.Navigation("Wydarzenia");
                });

            modelBuilder.Entity("WebApplication5.Models.Uczestnik", b =>
                {
                    b.Navigation("Wydarzenia");
                });

            modelBuilder.Entity("WebApplication5.Models.Wydarzenie", b =>
                {
                    b.Navigation("UczestnikWydarzenie");

                    b.Navigation("WydarzeniePrelegent");
                });
#pragma warning restore 612, 618
        }
    }
}
